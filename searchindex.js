Search.setIndex({"docnames": ["_autosummary/send_the_raven.address", "_autosummary/send_the_raven.address.Address", "_autosummary/send_the_raven.address.Addresses", "_autosummary/send_the_raven.address.Placemapper", "_autosummary/send_the_raven.address.compare", "_autosummary/send_the_raven.geoaddress", "_autosummary/send_the_raven.geoaddress.GeoAddress", "_autosummary/send_the_raven.geoaddress.Geocoder", "_autosummary/send_the_raven.utils", "_autosummary/send_the_raven.utils.clean_string", "_autosummary/send_the_raven.utils.generate_id", "_autosummary/send_the_raven.utils.split_into_n_elements", "_autosummary/send_the_raven.validator", "_autosummary/send_the_raven.validator.Validator", "api", "contribute", "example", "index"], "filenames": ["_autosummary/send_the_raven.address.rst", "_autosummary/send_the_raven.address.Address.rst", "_autosummary/send_the_raven.address.Addresses.rst", "_autosummary/send_the_raven.address.Placemapper.rst", "_autosummary/send_the_raven.address.compare.rst", "_autosummary/send_the_raven.geoaddress.rst", "_autosummary/send_the_raven.geoaddress.GeoAddress.rst", "_autosummary/send_the_raven.geoaddress.Geocoder.rst", "_autosummary/send_the_raven.utils.rst", "_autosummary/send_the_raven.utils.clean_string.rst", "_autosummary/send_the_raven.utils.generate_id.rst", "_autosummary/send_the_raven.utils.split_into_n_elements.rst", "_autosummary/send_the_raven.validator.rst", "_autosummary/send_the_raven.validator.Validator.rst", "api.rst", "contribute.rst", "example.rst", "index.rst"], "titles": ["send_the_raven.address", "send_the_raven.address.Address", "send_the_raven.address.Addresses", "send_the_raven.address.Placemapper", "send_the_raven.address.compare", "send_the_raven.geoaddress", "send_the_raven.geoaddress.GeoAddress", "send_the_raven.geoaddress.Geocoder", "send_the_raven.utils", "send_the_raven.utils.clean_string", "send_the_raven.utils.generate_id", "send_the_raven.utils.split_into_n_elements", "send_the_raven.validator", "send_the_raven.validator.Validator", "API Reference", "Contributing", "Examples", "Send The Raven"], "terms": {"function": [0, 1, 2, 6, 7, 8, 15, 17], "class": [0, 1, 2, 3, 5, 6, 7, 12, 13, 17], "sourc": [1, 2, 3, 4, 6, 7, 9, 10, 11, 13, 17], "base": [1, 2, 3, 6, 7, 13], "basemodel": [1, 6], "repres": [1, 2, 6], "u": [1, 6, 17], "paramet": [1, 2, 4, 6, 7, 9, 10, 11, 13], "full_address": [1, 2, 4, 6, 7, 13, 16], "str": [1, 2, 6, 7, 9, 10, 13], "full": [1, 13], "street": [1, 2, 4, 6, 7, 13, 16, 17], "The": [1, 2, 4, 6, 15], "name": [1, 2, 3, 4, 6, 15, 17], "number": [1, 2, 4, 7, 13, 17], "address_line_2": [1, 2, 6, 7, 13], "second": [1, 4, 13], "line": 1, "citi": [1, 2, 3, 4, 6, 7, 13, 16, 17], "state": [1, 2, 3, 4, 6, 7, 13, 16, 17], "provinc": 1, "zip_cod": [1, 2, 6, 7, 13, 16, 17], "zip": [1, 3, 6, 13, 16, 17], "code": [1, 3, 6, 15, 16, 17], "postal": 1, "id": [1, 2, 6, 7, 10, 13, 15], "If": [1, 3, 6, 7, 15], "present": [1, 3, 6], "one": [1, 3, 6], "gener": [1, 6, 10], "keep": 1, "track": 1, "type": [1, 2, 4, 6, 9, 10, 11, 13], "__init__": [1, 2, 3, 6, 7, 13], "data": [1, 2, 6, 11, 13, 17], "creat": [1, 3, 6, 16], "new": [1, 3, 6, 15], "model": [1, 6], "pars": [1, 6, 17], "valid": [1, 6, 17], "input": [1, 2, 6, 9], "from": [1, 3, 6, 15, 16, 17], "keyword": [1, 3, 6], "argument": [1, 3, 6, 7], "rais": [1, 3, 6, 15], "validationerror": [1, 6], "pydantic_cor": [1, 6], "cannot": [1, 6], "form": [1, 6], "us": [1, 2, 6, 7, 13, 15, 17], "__pydantic_self__": [1, 6], "instead": [1, 6], "more": [1, 4, 6, 10, 17], "common": [1, 6], "self": [1, 2, 6], "first": [1, 3, 4, 6], "arg": [1, 3, 6, 7], "allow": [1, 6], "field": [1, 2, 6], "ani": [1, 2, 6, 7, 9, 13, 15], "return": [1, 3, 4, 6, 7, 9, 10, 11, 13, 17], "none": [1, 2, 3, 4, 6, 7, 13], "__call__": [1, 2, 3, 6, 7, 13], "kwarg": [1, 2, 3, 6], "call": [1, 2, 6, 7], "method": [1, 2, 3, 6, 7, 13, 17], "attribut": [1, 2, 3, 6], "copi": [1, 3, 6, 15], "includ": [1, 6, 15, 17], "exclud": [1, 6], "updat": [1, 3, 6, 15], "deep": [1, 6], "fals": [1, 6], "warn": [1, 6], "deprec": [1, 6], "thi": [1, 3, 4, 6, 7, 15], "i": [1, 2, 3, 4, 6, 7, 15, 16, 17], "now": [1, 6], "model_copi": [1, 6], "you": [1, 6, 7, 15], "need": [1, 6, 15, 16], "py": [1, 6, 17], "model_dump": [1, 6], "round_trip": [1, 6], "true": [1, 6], "model_valid": [1, 6], "abstractsetintstr": [1, 6], "mappingintstrani": [1, 6], "option": [1, 6], "set": [1, 3, 6], "map": [1, 2, 3, 6, 7, 13], "specifi": [1, 3, 6], "which": [1, 6], "dict": [1, 2, 3, 6, 7, 13], "dictionari": [1, 2, 3, 6], "valu": [1, 2, 3, 6], "pair": [1, 3, 6], "overrid": [1, 6], "bool": [1, 6], "ar": [1, 2, 3, 6, 7, 13, 15], "pydant": [1, 6], "A": [1, 2, 6], "extract_address": [1, 6], "manual": [1, 6, 16], "extract": [1, 6, 16, 17], "directli": [1, 6], "usaddress": [1, 6, 17], "librari": [1, 6, 17], "fill_in_c": [1, 6], "try": [1, 6], "find": [1, 6], "correct": [1, 6, 17], "difflib": [1, 6], "sequencematch": [1, 6], "ratio": [1, 6], "score": [1, 4, 6], "abov": [1, 6], "0": [1, 4, 6, 16], "73": [1, 6], "replac": [1, 6], "current": [1, 6], "exampl": [1, 2, 3, 4, 6, 7, 13, 17], "addr": [1, 6, 13, 16], "san": [1, 6], "fran": [1, 6], "print": [1, 6, 7, 13, 16], "francisco": [1, 6], "expens": [1, 6], "oper": [1, 6], "fill_in_st": [1, 6, 16], "convert": [1, 6, 9, 17], "its": [1, 6], "2": [1, 3, 6, 16], "letter": [1, 6], "abbrevi": [1, 6], "found": [1, 3, 6], "closest": [1, 6], "usp": [1, 6, 13, 15, 17], "california": [1, 6], "ca": [1, 6, 13, 16, 17], "fill_in_zipcod": [1, 6, 16], "zipcod": [1, 6, 16], "have": [1, 6, 7, 15], "success": [1, 6], "rate": [1, 6], "when": [1, 2, 6, 7], "even": [1, 6], "though": [1, 6], "": [1, 2, 3, 6, 15, 16], "wrong": [1, 6], "same": [1, 6, 10], "94105": [1, 6], "properti": [1, 6], "model_computed_field": [1, 6], "computedfieldinfo": [1, 6], "get": [1, 3, 6, 13, 15], "comput": [1, 6], "instanc": [1, 6, 7, 16], "correspond": [1, 3, 6], "object": [1, 2, 3, 4, 6], "model_config": [1, 6], "classvar": [1, 6], "configdict": [1, 6], "configur": [1, 6], "should": [1, 4, 6, 15], "conform": [1, 6], "config": [1, 6], "classmethod": [1, 6], "model_construct": [1, 6], "_fields_set": [1, 6], "__dict__": [1, 6], "__pydantic_fields_set__": [1, 6], "trust": [1, 6], "pre": [1, 6], "default": [1, 2, 3, 6], "respect": [1, 6], "other": [1, 6], "perform": [1, 3, 6], "behav": [1, 6], "extra": [1, 6, 7, 9, 10], "wa": [1, 3, 6], "sinc": [1, 6], "add": [1, 6, 15], "all": [1, 2, 3, 6, 7, 13, 15], "pass": [1, 6, 7, 15], "accept": [1, 6], "usag": [1, 6], "doc": [1, 6], "http": [1, 6, 15, 17], "dev": [1, 6, 15], "serial": [1, 6], "chang": [1, 6], "note": [1, 6], "befor": [1, 6, 15], "make": [1, 6, 10], "mode": [1, 6], "python": [1, 6, 17], "by_alia": [1, 6], "exclude_unset": [1, 6], "exclude_default": [1, 6], "exclude_non": [1, 6], "modelmodel_dump": [1, 6], "represent": [1, 6], "liter": [1, 6], "json": [1, 6], "to_python": [1, 6], "run": [1, 6, 7], "onli": [1, 6], "contain": [1, 6], "serializ": [1, 6], "mai": [1, 6, 15], "incex": [1, 6], "list": [1, 2, 3, 6, 7, 11, 13], "output": [1, 6, 10], "whether": [1, 6], "alia": [1, 6], "kei": [1, 2, 3, 6, 15], "defin": [1, 6], "unset": [1, 6], "enabl": [1, 6], "deseri": [1, 6], "round": [1, 6], "trip": [1, 6], "support": [1, 6], "log": [1, 6], "invalid": [1, 6], "encount": [1, 6], "model_dump_json": [1, 6], "indent": [1, 6], "modelmodel_dump_json": [1, 6], "to_json": [1, 6], "int": [1, 2, 6, 7, 11, 13], "compact": [1, 6], "can": [1, 6, 16, 17], "take": [1, 4, 6], "either": [1, 3, 4, 6], "string": [1, 6, 9, 10, 16], "alias": [1, 6], "been": [1, 6], "explicitli": [1, 6], "between": [1, 4, 6], "show": [1, 6], "occur": [1, 6], "dure": [1, 6, 15], "model_extra": [1, 6], "model_field": [1, 6], "fieldinfo": [1, 6], "annot": [1, 6], "union": [1, 6], "nonetyp": [1, 6], "requir": [1, 6, 15], "41190dd5a15c388": [1, 6], "metadata": [1, 6], "about": [1, 6], "__fields__": [1, 6], "v1": [1, 6], "model_fields_set": [1, 6], "e": [1, 3, 6], "were": [1, 6], "fill": [1, 6, 16], "model_json_schema": [1, 6], "ref_templ": [1, 6], "def": [1, 6], "schema_gener": [1, 6], "json_schema": [1, 6], "generatejsonschema": [1, 6], "schema": [1, 6], "refer": [1, 6], "templat": [1, 6], "To": [1, 6, 15], "logic": [1, 6], "subclass": [1, 6], "your": [1, 6, 7], "desir": [1, 6], "modif": [1, 6], "given": [1, 3, 6], "model_parametrized_nam": [1, 6], "param": [1, 6], "parametr": [1, 6], "overridden": [1, 6], "achiev": [1, 6], "custom": [1, 6], "scheme": [1, 6], "tupl": [1, 3, 6, 13], "variabl": [1, 6, 9], "concret": [1, 6], "would": [1, 6], "where": [1, 6], "cl": [1, 6], "typeerror": [1, 6], "non": [1, 6], "model_post_init": [1, 6], "_basemodel__context": [1, 6], "addit": [1, 6, 17], "initi": [1, 3, 6, 13], "after": [1, 6, 13], "want": [1, 6, 7], "do": [1, 6], "some": [1, 6], "entir": [1, 6], "model_rebuild": [1, 6], "forc": [1, 6], "raise_error": [1, 6], "_parent_namespace_depth": [1, 6], "_types_namespac": [1, 6], "rebuild": [1, 6], "core": [1, 6], "necessari": [1, 6], "forwardref": [1, 6], "could": [1, 6, 16], "resolv": [1, 6], "attempt": [1, 6], "build": [1, 6], "automat": [1, 6], "fail": [1, 6, 7], "error": [1, 6, 7, 13], "depth": [1, 6], "level": [1, 6], "parent": [1, 6], "namespac": [1, 6], "alreadi": [1, 6, 15], "complet": [1, 6, 13], "_was_": [1, 6], "otherwis": [1, 3, 6], "obj": [1, 6], "strict": [1, 6, 7], "from_attribut": [1, 6], "context": [1, 6], "an": [1, 3, 6, 15], "except": [1, 6, 13], "model_validate_json": [1, 6], "json_data": [1, 6], "against": [1, 6], "byte": [1, 6], "bytearrai": [1, 6], "enforc": [1, 6], "strictli": [1, 6], "valueerror": [1, 6], "normal": [1, 2, 4, 6, 7, 13, 16, 17], "greenbuildingregistri": [1, 6], "scourgifi": [1, 6, 17], "parseabl": [1, 6], "No": [1, 6], "thrown": [1, 6], "iter": [2, 3, 7, 11, 13], "construct": [2, 17], "field_map": [2, 7, 13], "default_address_map": 2, "12": [2, 4, 16], "main": [2, 4, 13, 15, 16, 17], "st": [2, 4, 13, 16, 17], "boston": [2, 3, 4, 16], "14": 2, "field_mapp": 2, "normalize_parallel": [2, 7, 13], "number_of_proccess": [2, 7, 13], "parallel": [2, 7, 13, 16], "multiprocess": [2, 7, 13], "pool": [2, 7, 13], "process": [2, 7, 13, 16, 17], "typeddict": 3, "lookup": 3, "tabl": 3, "york": 3, "ny": 3, "washington": 3, "ma": [3, 4, 16], "02354": 3, "empti": 3, "via": 3, "d": 3, "k": 3, "v": 3, "For": 3, "1": [3, 4, 16], "two": [3, 4], "__new__": 3, "clear": 3, "remov": [3, 9], "item": 3, "shallow": 3, "fromkei": 3, "els": 3, "like": 3, "provid": [3, 7, 17], "view": 3, "pop": 3, "keyerror": 3, "popitem": 3, "lifo": 3, "last": 3, "out": [3, 10, 15], "order": [3, 16], "setdefault": 3, "insert": 3, "f": [3, 16], "ha": [3, 4], "doe": 3, "lack": 3, "In": 3, "case": 3, "follow": [3, 17], "b": [4, 15], "similar": 4, "comparison": [4, 17], "account": [4, 15], "differ": 4, "unit": [4, 15], "etc": 4, "prior": 4, "best": 4, "result": [4, 13, 16], "doesn": 4, "t": [4, 11, 15], "check": [4, 15], "addr1": [4, 16], "addr2": [4, 16], "addr3": 4, "13": [4, 6], "assert": [4, 16], "higher": 4, "than": 4, "becaus": 4, "float": [4, 6], "__eq__": 4, "address": [6, 7, 9, 13, 15, 17], "geograph": 6, "inform": [6, 17], "longitud": [6, 7, 17], "latitud": [6, 7, 17], "h3_index": 6, "index": [6, 17], "h3": [6, 17], "h3_resolut": 6, "resolut": 6, "calculate_h3_index": 6, "calcul": 6, "start": [7, 13, 15], "geopy_geocod": 7, "choic": 7, "nominatim": [7, 16], "user_ag": [7, 16], "my_app": [7, 16], "geocoder_nam": 7, "adter": 7, "geopi": [7, 17], "get_geocoder_for_servic": 7, "async": [7, 13], "ad": 7, "bring": 7, "own": [7, 15], "runner": 7, "limit": [7, 13], "feel": [7, 15], "free": [7, 15], "rate_limit": 7, "asyncratelimit": 7, "ratelimit": 7, "wrape": 7, "start_geocod": 7, "asyncron": 7, "less": 7, "clean": 9, "space": 9, "extra_str": 10, "random": 10, "never": 10, "spit": 10, "n_element": 11, "5": 11, "split": 11, "slice": 11, "how": 11, "mani": 11, "element": 11, "each": [11, 15], "databas": [13, 17], "usps_id": [13, 16, 17], "here": [13, 15, 16, 17], "request_limit": 13, "maximum": 13, "request": [13, 17], "per": 13, "123": [13, 16, 17], "anytown": [13, 16, 17], "12345": [13, 16, 17], "456": [13, 16, 17], "oak": [13, 16, 17], "rd": [13, 16, 17], "forest": [13, 16, 17], "vt": [13, 16, 17], "67890": [13, 16, 17], "my_id": [13, 16, 17], "valid_address": [13, 16, 17], "10": 13, "Will": 13, "start_valid": 13, "aiohttp": [13, 17], "tcpconnector": 13, "clientsess": 13, "asyncio": 13, "client": 13, "send_the_raven": [15, 16, 17], "welcom": 15, "github": 15, "repo": 15, "mit": 15, "licens": 15, "activ": 15, "maintain": 15, "pleas": 15, "open": [15, 17], "issu": 15, "bug": 15, "featur": 15, "interest": 15, "help": [15, 16], "peopl": 15, "countri": 15, "shoot": 15, "me": 15, "email": 15, "thereverend": 15, "sullivan": 15, "yahoo": 15, "co": 15, "click": 15, "top": 15, "right": 15, "corner": 15, "page": 15, "machin": 15, "git": 15, "com": 15, "fazatholomew": 15, "send": 15, "raven": 15, "It": [15, 16, 17], "good": 15, "practic": 15, "bugfix": 15, "checkout": [15, 17], "project": 15, "packag": 15, "manag": 15, "don": 15, "pip": [15, 17], "document": [15, 17], "Be": 15, "sure": 15, "docstr": 15, "comment": 15, "haven": 15, "api": [15, 16], "Then": 15, "env": 15, "put": 15, "usps_userid": 15, "your_api_kei": 15, "suit": 15, "poe": 15, "accordingli": 15, "m": 15, "messag": 15, "origin": 15, "On": 15, "review": 15, "ask": 15, "revis": 15, "merg": 15, "feedback": 15, "thank": [15, 17], "compar": 16, "tidiou": 16, "sometim": 16, "compon": 16, "That": 16, "why": 16, "easili": 16, "furthermor": 16, "increas": 16, "import": [16, 17], "massachusett": 16, "smartli": 16, "many_address": 16, "park": 16, "lawrenc": 16, "One": 16, "million": 16, "come": 16, "rescu": 16, "addresss": 16, "done": 16, "geoaddress": 16, "most": 16, "develop": [16, 17], "friendli": 16, "therefor": 16, "comprehens": 17, "collect": 17, "toolkit": 17, "algorithm": 17, "handl": 17, "aim": 17, "simplifi": 17, "work": 17, "offer": 17, "format": 17, "offici": 17, "structur": 17, "hous": 17, "ensur": 17, "accuraci": 17, "complianc": 17, "standard": 17, "consist": 17, "manner": 17, "variou": 17, "purpos": 17, "geocod": 17, "util": 17, "enhanc": 17, "pypi": 17, "quick": 17, "also": 17, "xmltodict": 17, "xml": 17, "asynchron": 17, "geospati": 17, "we": 17, "contribut": 17}, "objects": {"send_the_raven": [[0, 0, 0, "-", "address"], [5, 0, 0, "-", "geoaddress"], [8, 0, 0, "-", "utils"], [12, 0, 0, "-", "validator"]], "send_the_raven.address": [[1, 1, 1, "", "Address"], [2, 1, 1, "", "Addresses"], [3, 1, 1, "", "Placemapper"], [4, 5, 1, "", "compare"]], "send_the_raven.address.Address": [[1, 2, 1, "", "__call__"], [1, 2, 1, "id0", "__init__"], [1, 3, 1, "", "address_line_2"], [1, 3, 1, "", "city"], [1, 2, 1, "", "copy"], [1, 2, 1, "", "extract_address"], [1, 2, 1, "", "fill_in_city"], [1, 2, 1, "", "fill_in_state"], [1, 2, 1, "", "fill_in_zipcode"], [1, 3, 1, "", "full_address"], [1, 3, 1, "", "id"], [1, 4, 1, "", "model_computed_fields"], [1, 3, 1, "", "model_config"], [1, 2, 1, "", "model_construct"], [1, 2, 1, "", "model_copy"], [1, 2, 1, "", "model_dump"], [1, 2, 1, "", "model_dump_json"], [1, 4, 1, "", "model_extra"], [1, 3, 1, "", "model_fields"], [1, 4, 1, "", "model_fields_set"], [1, 2, 1, "", "model_json_schema"], [1, 2, 1, "", "model_parametrized_name"], [1, 2, 1, "", "model_post_init"], [1, 2, 1, "", "model_rebuild"], [1, 2, 1, "", "model_validate"], [1, 2, 1, "", "model_validate_json"], [1, 2, 1, "", "normalize"], [1, 3, 1, "", "state"], [1, 3, 1, "", "street"], [1, 3, 1, "", "zip_code"]], "send_the_raven.address.Addresses": [[2, 2, 1, "", "__call__"], [2, 2, 1, "id0", "__init__"], [2, 3, 1, "", "addresses"], [2, 3, 1, "", "field_mapping"], [2, 2, 1, "", "normalize_parallel"]], "send_the_raven.address.Placemapper": [[3, 2, 1, "", "__call__"], [3, 2, 1, "id0", "__init__"], [3, 2, 1, "", "__new__"], [3, 2, 1, "", "clear"], [3, 2, 1, "", "copy"], [3, 2, 1, "", "fromkeys"], [3, 2, 1, "", "get"], [3, 2, 1, "", "items"], [3, 2, 1, "", "keys"], [3, 2, 1, "", "pop"], [3, 2, 1, "", "popitem"], [3, 2, 1, "", "setdefault"], [3, 2, 1, "", "update"], [3, 2, 1, "", "values"]], "send_the_raven.geoaddress": [[6, 1, 1, "", "GeoAddress"], [7, 1, 1, "", "Geocoder"]], "send_the_raven.geoaddress.GeoAddress": [[6, 2, 1, "", "__call__"], [6, 2, 1, "id0", "__init__"], [6, 2, 1, "", "calculate_h3_index"], [6, 2, 1, "", "copy"], [6, 2, 1, "", "extract_address"], [6, 2, 1, "", "fill_in_city"], [6, 2, 1, "", "fill_in_state"], [6, 2, 1, "", "fill_in_zipcode"], [6, 3, 1, "", "h3_index"], [6, 3, 1, "", "h3_resolution"], [6, 3, 1, "", "latitude"], [6, 3, 1, "", "longitude"], [6, 4, 1, "", "model_computed_fields"], [6, 3, 1, "", "model_config"], [6, 2, 1, "", "model_construct"], [6, 2, 1, "", "model_copy"], [6, 2, 1, "", "model_dump"], [6, 2, 1, "", "model_dump_json"], [6, 4, 1, "", "model_extra"], [6, 3, 1, "", "model_fields"], [6, 4, 1, "", "model_fields_set"], [6, 2, 1, "", "model_json_schema"], [6, 2, 1, "", "model_parametrized_name"], [6, 2, 1, "", "model_post_init"], [6, 2, 1, "", "model_rebuild"], [6, 2, 1, "", "model_validate"], [6, 2, 1, "", "model_validate_json"], [6, 2, 1, "", "normalize"]], "send_the_raven.geoaddress.Geocoder": [[7, 2, 1, "", "__call__"], [7, 2, 1, "id0", "__init__"], [7, 2, 1, "", "geocode"], [7, 2, 1, "", "normalize_parallel"], [7, 2, 1, "", "start_geocode"]], "send_the_raven.utils": [[9, 5, 1, "", "clean_string"], [10, 5, 1, "", "generate_id"], [11, 5, 1, "", "split_into_n_elements"]], "send_the_raven.validator": [[13, 1, 1, "", "Validator"]], "send_the_raven.validator.Validator": [[13, 2, 1, "", "__call__"], [13, 2, 1, "id0", "__init__"], [13, 3, 1, "", "data"], [13, 3, 1, "", "errors"], [13, 2, 1, "", "normalize_parallel"], [13, 3, 1, "", "results"], [13, 2, 1, "", "start_validation"], [13, 2, 1, "", "validate"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:property", "5": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "property", "Python property"], "5": ["py", "function", "Python function"]}, "titleterms": {"send_the_raven": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13], "address": [0, 1, 2, 3, 4, 16], "placemapp": 3, "compar": 4, "geoaddress": [5, 6, 7], "geocod": [7, 16], "util": [8, 9, 10, 11], "clean_str": 9, "generate_id": 10, "split_into_n_el": 11, "valid": [12, 13, 16], "api": 14, "refer": 14, "contribut": 15, "develop": 15, "1": 15, "fork": 15, "repositori": 15, "2": 15, "clone": 15, "your": 15, "local": 15, "3": 15, "creat": 15, "branch": 15, "4": 15, "instal": [15, 17], "poetri": 15, "5": 15, "depend": 15, "6": 15, "make": 15, "chang": 15, "7": 15, "prepar": 15, "test": 15, "8": 15, "run": 15, "commit": 15, "push": 15, "9": 15, "submit": 15, "pull": 15, "request": 15, "exampl": 16, "work": 16, "convert": 16, "longitud": 16, "latitud": 16, "us": 16, "usp": 16, "send": 17, "The": 17, "raven": 17, "featur": 17, "usag": 17, "acknowledg": 17}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"send_the_raven.address": [[0, "module-send_the_raven.address"]], "send_the_raven.address.Address": [[1, "send-the-raven-address-address"]], "send_the_raven.address.Addresses": [[2, "send-the-raven-address-addresses"]], "send_the_raven.address.Placemapper": [[3, "send-the-raven-address-placemapper"]], "send_the_raven.address.compare": [[4, "send-the-raven-address-compare"]], "send_the_raven.geoaddress": [[5, "module-send_the_raven.geoaddress"]], "send_the_raven.geoaddress.GeoAddress": [[6, "send-the-raven-geoaddress-geoaddress"]], "send_the_raven.geoaddress.Geocoder": [[7, "send-the-raven-geoaddress-geocoder"]], "send_the_raven.utils": [[8, "module-send_the_raven.utils"]], "send_the_raven.utils.clean_string": [[9, "send-the-raven-utils-clean-string"]], "send_the_raven.utils.generate_id": [[10, "send-the-raven-utils-generate-id"]], "send_the_raven.utils.split_into_n_elements": [[11, "send-the-raven-utils-split-into-n-elements"]], "send_the_raven.validator": [[12, "module-send_the_raven.validator"]], "send_the_raven.validator.Validator": [[13, "send-the-raven-validator-validator"]], "API Reference": [[14, "api-reference"]], "Contributing": [[15, "contributing"]], "Development": [[15, "development"]], "1. Fork the repository": [[15, "fork-the-repository"]], "2. Clone your fork locally": [[15, "clone-your-fork-locally"]], "3. Create a branch": [[15, "create-a-branch"]], "4. Install Poetry": [[15, "install-poetry"]], "5. Install dependencies": [[15, "install-dependencies"]], "6. Make your changes": [[15, "make-your-changes"]], "7. Prepare for test": [[15, "prepare-for-test"]], "8. Run tests": [[15, "run-tests"]], "8. Commit and push": [[15, "commit-and-push"]], "9. Submit a pull request": [[15, "submit-a-pull-request"]], "Examples": [[16, "examples"]], "Working with Address": [[16, "working-with-address"]], "Convert Address into Longitude and Latitude using Geocoder": [[16, "convert-address-into-longitude-and-latitude-using-geocoder"]], "Validate addresses to USPS using Validator": [[16, "validate-addresses-to-usps-using-validator"]], "Send The Raven": [[17, "send-the-raven"]], "Features": [[17, "features"]], "Installation": [[17, "installation"]], "Usage": [[17, "usage"]], "Acknowledgments": [[17, "acknowledgments"]]}, "indexentries": {"module": [[0, "module-send_the_raven.address"], [5, "module-send_the_raven.geoaddress"], [8, "module-send_the_raven.utils"], [12, "module-send_the_raven.validator"]], "send_the_raven.address": [[0, "module-send_the_raven.address"]], "address (class in send_the_raven.address)": [[1, "send_the_raven.address.Address"]], "__call__() (send_the_raven.address.address method)": [[1, "send_the_raven.address.Address.__call__"]], "__init__() (send_the_raven.address.address method)": [[1, "id0"], [1, "send_the_raven.address.Address.__init__"]], "address_line_2 (send_the_raven.address.address attribute)": [[1, "send_the_raven.address.Address.address_line_2"]], "city (send_the_raven.address.address attribute)": [[1, "send_the_raven.address.Address.city"]], "copy() (send_the_raven.address.address method)": [[1, "send_the_raven.address.Address.copy"]], "extract_address() (send_the_raven.address.address method)": [[1, "send_the_raven.address.Address.extract_address"]], "fill_in_city() (send_the_raven.address.address method)": [[1, "send_the_raven.address.Address.fill_in_city"]], "fill_in_state() (send_the_raven.address.address method)": [[1, "send_the_raven.address.Address.fill_in_state"]], "fill_in_zipcode() (send_the_raven.address.address method)": [[1, "send_the_raven.address.Address.fill_in_zipcode"]], "full_address (send_the_raven.address.address attribute)": [[1, "send_the_raven.address.Address.full_address"]], "id (send_the_raven.address.address attribute)": [[1, "send_the_raven.address.Address.id"]], "model_computed_fields (send_the_raven.address.address property)": [[1, "send_the_raven.address.Address.model_computed_fields"]], "model_config (send_the_raven.address.address attribute)": [[1, "send_the_raven.address.Address.model_config"]], "model_construct() (send_the_raven.address.address class method)": [[1, "send_the_raven.address.Address.model_construct"]], "model_copy() (send_the_raven.address.address method)": [[1, "send_the_raven.address.Address.model_copy"]], "model_dump() (send_the_raven.address.address method)": [[1, "send_the_raven.address.Address.model_dump"]], "model_dump_json() (send_the_raven.address.address method)": [[1, "send_the_raven.address.Address.model_dump_json"]], "model_extra (send_the_raven.address.address property)": [[1, "send_the_raven.address.Address.model_extra"]], "model_fields (send_the_raven.address.address attribute)": [[1, "send_the_raven.address.Address.model_fields"]], "model_fields_set (send_the_raven.address.address property)": [[1, "send_the_raven.address.Address.model_fields_set"]], "model_json_schema() (send_the_raven.address.address class method)": [[1, "send_the_raven.address.Address.model_json_schema"]], "model_parametrized_name() (send_the_raven.address.address class method)": [[1, "send_the_raven.address.Address.model_parametrized_name"]], "model_post_init() (send_the_raven.address.address method)": [[1, "send_the_raven.address.Address.model_post_init"]], "model_rebuild() (send_the_raven.address.address class method)": [[1, "send_the_raven.address.Address.model_rebuild"]], "model_validate() (send_the_raven.address.address class method)": [[1, "send_the_raven.address.Address.model_validate"]], "model_validate_json() (send_the_raven.address.address class method)": [[1, "send_the_raven.address.Address.model_validate_json"]], "normalize() (send_the_raven.address.address method)": [[1, "send_the_raven.address.Address.normalize"]], "state (send_the_raven.address.address attribute)": [[1, "send_the_raven.address.Address.state"]], "street (send_the_raven.address.address attribute)": [[1, "send_the_raven.address.Address.street"]], "zip_code (send_the_raven.address.address attribute)": [[1, "send_the_raven.address.Address.zip_code"]], "addresses (class in send_the_raven.address)": [[2, "send_the_raven.address.Addresses"]], "__call__() (send_the_raven.address.addresses method)": [[2, "send_the_raven.address.Addresses.__call__"]], "__init__() (send_the_raven.address.addresses method)": [[2, "id0"], [2, "send_the_raven.address.Addresses.__init__"]], "addresses (send_the_raven.address.addresses attribute)": [[2, "send_the_raven.address.Addresses.addresses"]], "field_mapping (send_the_raven.address.addresses attribute)": [[2, "send_the_raven.address.Addresses.field_mapping"]], "normalize_parallel() (send_the_raven.address.addresses method)": [[2, "send_the_raven.address.Addresses.normalize_parallel"]], "placemapper (class in send_the_raven.address)": [[3, "send_the_raven.address.Placemapper"]], "__call__() (send_the_raven.address.placemapper method)": [[3, "send_the_raven.address.Placemapper.__call__"]], "__init__() (send_the_raven.address.placemapper method)": [[3, "id0"], [3, "send_the_raven.address.Placemapper.__init__"]], "__new__() (send_the_raven.address.placemapper method)": [[3, "send_the_raven.address.Placemapper.__new__"]], "clear() (send_the_raven.address.placemapper method)": [[3, "send_the_raven.address.Placemapper.clear"]], "copy() (send_the_raven.address.placemapper method)": [[3, "send_the_raven.address.Placemapper.copy"]], "fromkeys() (send_the_raven.address.placemapper method)": [[3, "send_the_raven.address.Placemapper.fromkeys"]], "get() (send_the_raven.address.placemapper method)": [[3, "send_the_raven.address.Placemapper.get"]], "items() (send_the_raven.address.placemapper method)": [[3, "send_the_raven.address.Placemapper.items"]], "keys() (send_the_raven.address.placemapper method)": [[3, "send_the_raven.address.Placemapper.keys"]], "pop() (send_the_raven.address.placemapper method)": [[3, "send_the_raven.address.Placemapper.pop"]], "popitem() (send_the_raven.address.placemapper method)": [[3, "send_the_raven.address.Placemapper.popitem"]], "setdefault() (send_the_raven.address.placemapper method)": [[3, "send_the_raven.address.Placemapper.setdefault"]], "update() (send_the_raven.address.placemapper method)": [[3, "send_the_raven.address.Placemapper.update"]], "values() (send_the_raven.address.placemapper method)": [[3, "send_the_raven.address.Placemapper.values"]], "compare() (in module send_the_raven.address)": [[4, "send_the_raven.address.compare"]], "send_the_raven.geoaddress": [[5, "module-send_the_raven.geoaddress"]], "geoaddress (class in send_the_raven.geoaddress)": [[6, "send_the_raven.geoaddress.GeoAddress"]], "__call__() (send_the_raven.geoaddress.geoaddress method)": [[6, "send_the_raven.geoaddress.GeoAddress.__call__"]], "__init__() (send_the_raven.geoaddress.geoaddress method)": [[6, "id0"], [6, "send_the_raven.geoaddress.GeoAddress.__init__"]], "calculate_h3_index() (send_the_raven.geoaddress.geoaddress method)": [[6, "send_the_raven.geoaddress.GeoAddress.calculate_h3_index"]], "copy() (send_the_raven.geoaddress.geoaddress method)": [[6, "send_the_raven.geoaddress.GeoAddress.copy"]], "extract_address() (send_the_raven.geoaddress.geoaddress method)": [[6, "send_the_raven.geoaddress.GeoAddress.extract_address"]], "fill_in_city() (send_the_raven.geoaddress.geoaddress method)": [[6, "send_the_raven.geoaddress.GeoAddress.fill_in_city"]], "fill_in_state() (send_the_raven.geoaddress.geoaddress method)": [[6, "send_the_raven.geoaddress.GeoAddress.fill_in_state"]], "fill_in_zipcode() (send_the_raven.geoaddress.geoaddress method)": [[6, "send_the_raven.geoaddress.GeoAddress.fill_in_zipcode"]], "h3_index (send_the_raven.geoaddress.geoaddress attribute)": [[6, "send_the_raven.geoaddress.GeoAddress.h3_index"]], "h3_resolution (send_the_raven.geoaddress.geoaddress attribute)": [[6, "send_the_raven.geoaddress.GeoAddress.h3_resolution"]], "latitude (send_the_raven.geoaddress.geoaddress attribute)": [[6, "send_the_raven.geoaddress.GeoAddress.latitude"]], "longitude (send_the_raven.geoaddress.geoaddress attribute)": [[6, "send_the_raven.geoaddress.GeoAddress.longitude"]], "model_computed_fields (send_the_raven.geoaddress.geoaddress property)": [[6, "send_the_raven.geoaddress.GeoAddress.model_computed_fields"]], "model_config (send_the_raven.geoaddress.geoaddress attribute)": [[6, "send_the_raven.geoaddress.GeoAddress.model_config"]], "model_construct() (send_the_raven.geoaddress.geoaddress class method)": [[6, "send_the_raven.geoaddress.GeoAddress.model_construct"]], "model_copy() (send_the_raven.geoaddress.geoaddress method)": [[6, "send_the_raven.geoaddress.GeoAddress.model_copy"]], "model_dump() (send_the_raven.geoaddress.geoaddress method)": [[6, "send_the_raven.geoaddress.GeoAddress.model_dump"]], "model_dump_json() (send_the_raven.geoaddress.geoaddress method)": [[6, "send_the_raven.geoaddress.GeoAddress.model_dump_json"]], "model_extra (send_the_raven.geoaddress.geoaddress property)": [[6, "send_the_raven.geoaddress.GeoAddress.model_extra"]], "model_fields (send_the_raven.geoaddress.geoaddress attribute)": [[6, "send_the_raven.geoaddress.GeoAddress.model_fields"]], "model_fields_set (send_the_raven.geoaddress.geoaddress property)": [[6, "send_the_raven.geoaddress.GeoAddress.model_fields_set"]], "model_json_schema() (send_the_raven.geoaddress.geoaddress class method)": [[6, "send_the_raven.geoaddress.GeoAddress.model_json_schema"]], "model_parametrized_name() (send_the_raven.geoaddress.geoaddress class method)": [[6, "send_the_raven.geoaddress.GeoAddress.model_parametrized_name"]], "model_post_init() (send_the_raven.geoaddress.geoaddress method)": [[6, "send_the_raven.geoaddress.GeoAddress.model_post_init"]], "model_rebuild() (send_the_raven.geoaddress.geoaddress class method)": [[6, "send_the_raven.geoaddress.GeoAddress.model_rebuild"]], "model_validate() (send_the_raven.geoaddress.geoaddress class method)": [[6, "send_the_raven.geoaddress.GeoAddress.model_validate"]], "model_validate_json() (send_the_raven.geoaddress.geoaddress class method)": [[6, "send_the_raven.geoaddress.GeoAddress.model_validate_json"]], "normalize() (send_the_raven.geoaddress.geoaddress method)": [[6, "send_the_raven.geoaddress.GeoAddress.normalize"]], "geocoder (class in send_the_raven.geoaddress)": [[7, "send_the_raven.geoaddress.Geocoder"]], "__call__() (send_the_raven.geoaddress.geocoder method)": [[7, "send_the_raven.geoaddress.Geocoder.__call__"]], "__init__() (send_the_raven.geoaddress.geocoder method)": [[7, "id0"], [7, "send_the_raven.geoaddress.Geocoder.__init__"]], "geocode() (send_the_raven.geoaddress.geocoder method)": [[7, "send_the_raven.geoaddress.Geocoder.geocode"]], "normalize_parallel() (send_the_raven.geoaddress.geocoder method)": [[7, "send_the_raven.geoaddress.Geocoder.normalize_parallel"]], "start_geocode() (send_the_raven.geoaddress.geocoder method)": [[7, "send_the_raven.geoaddress.Geocoder.start_geocode"]], "send_the_raven.utils": [[8, "module-send_the_raven.utils"]], "clean_string() (in module send_the_raven.utils)": [[9, "send_the_raven.utils.clean_string"]], "generate_id() (in module send_the_raven.utils)": [[10, "send_the_raven.utils.generate_id"]], "split_into_n_elements() (in module send_the_raven.utils)": [[11, "send_the_raven.utils.split_into_n_elements"]], "send_the_raven.validator": [[12, "module-send_the_raven.validator"]], "validator (class in send_the_raven.validator)": [[13, "send_the_raven.validator.Validator"]], "__call__() (send_the_raven.validator.validator method)": [[13, "send_the_raven.validator.Validator.__call__"]], "__init__() (send_the_raven.validator.validator method)": [[13, "id0"], [13, "send_the_raven.validator.Validator.__init__"]], "data (send_the_raven.validator.validator attribute)": [[13, "send_the_raven.validator.Validator.data"]], "errors (send_the_raven.validator.validator attribute)": [[13, "send_the_raven.validator.Validator.errors"]], "normalize_parallel() (send_the_raven.validator.validator method)": [[13, "send_the_raven.validator.Validator.normalize_parallel"]], "results (send_the_raven.validator.validator attribute)": [[13, "send_the_raven.validator.Validator.results"]], "start_validation() (send_the_raven.validator.validator method)": [[13, "send_the_raven.validator.Validator.start_validation"]], "validate() (send_the_raven.validator.validator method)": [[13, "send_the_raven.validator.Validator.validate"]]}})